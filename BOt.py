from telegram import Bot
import asyncio
import pytz
from datetime import datetime, timedelta

# Definir o fuso hor√°rio (exemplo, o hor√°rio de Bras√≠lia)
timezone = pytz.timezone("America/Sao_Paulo")

# Seu token do bot
TOKEN = '7479524024:AAE0WAun0HEQo9QeHYnI5lALtdtWddQyFFU'
GROUP_CHAT_IDS = [
    '-1002248961927',
    '-1002233378018',
    '-1002244712891',
    '-1002486468642',
    '-1002172438260'
]  # IDs dos grupos

# Inicializar o bot
bot = Bot(token=TOKEN)

# Fun√ß√£o para enviar mensagem
async def send_message(message):
    tasks = [
        bot.send_message(chat_id=chat_id, text=message)
        for chat_id in GROUP_CHAT_IDS
    ]
    results = await asyncio.gather(*tasks, return_exceptions=True)
    for chat_id, result in zip(GROUP_CHAT_IDS, results):
        if isinstance(result, Exception):
            print(f"Erro ao enviar para {chat_id}: {result}")
        else:
            print(f"Mensagem enviada para o chat {chat_id}")

# Mensagem padr√£o
MESSAGE = """
‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è
üö¥üö¥‚Äç‚ôÄÔ∏è     üèçüèç

Pr√≥ximo turno se inicia em 1 hora.

Entregadores que se agendaram ficar√£o dispon√≠veis automaticamente no APP.

QUEM N√ÉO SE AGENDOU, POR FAVOR, FA√áA SUA SOLICITA√á√ÉO DE VAGA NO GRUPO.

Pedimos que caso n√£o possam rodar no turno agendado, nos informem com anteced√™ncia, por favor.
Antes de cada turno ser iniciado.

Contamos com a compreens√£o de todos e que nos ajudem nessas quest√µes ‚úåüèª

Equipe ABJP RJ Taquara üíô
"""

# Fun√ß√£o para calcular o tempo restante at√© o pr√≥ximo envio
def calculate_delay(hour, minute):
    now = datetime.now(timezone)
    target_time = now.replace(hour=hour, minute=minute, second=0, microsecond=0)
    if target_time < now:
        target_time += timedelta(days=1)
    return (target_time - now).total_seconds()

# Fun√ß√£o ass√≠ncrona para agendamento
async def schedule_messages():
    schedule_times = [(
